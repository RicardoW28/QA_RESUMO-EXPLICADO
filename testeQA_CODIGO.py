# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1h8ns5p9yCG9h8ukSGWelShsYUHWjSwFv
"""

def dividir(a, b):
    if b == 0:
        return "Erro: divisão por zero"
    return a / b

def test_dividir():
    assert dividir(6, 3) == 2
    assert dividir(10, 2) == 5
    assert dividir(5, 0) == "Erro: divisão por zero"
    print("Teste Unitário dividir passou!")

test_dividir()

def validar_usuario(nome, senha):
    return nome == "admin" and senha == "123"

def acessar_sistema(nome, senha):
    if validar_usuario(nome, senha):
        return "Sistema acessado"
    return "Acesso negado"

def test_acessar_sistema():
    assert acessar_sistema("admin", "123") == "Sistema acessado"
    assert acessar_sistema("admin", "errado") == "Acesso negado"
    print("Teste de Integração acessar_sistema passou!")

test_acessar_sistema()

class Estoque:
    def __init__(self):
        self.produtos = []

    def adicionar_produto(self, produto):
        self.produtos.append(produto)

    def total_produtos(self):
        return len(self.produtos)

def test_estoque():
    estoque = Estoque()
    estoque.adicionar_produto("Produto 1")
    estoque.adicionar_produto("Produto 2")
    assert estoque.total_produtos() == 2
    print("Teste de Sistema estoque passou!")

test_estoque()

def test_aceitacao():
    resultado = acessar_sistema("admin", "123")
    assert resultado == "Sistema acessado"
    print("Teste de Aceitação passou!")

test_aceitacao()

def test_regressao():
    assert dividir(9, 3) == 3
    print("Teste de Regressão passou!")

test_regressao()